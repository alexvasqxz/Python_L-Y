Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON programB
Rule 2     programB -> vars bloque
Rule 3     programB -> bloque
Rule 4     vars -> VAR ID varsI COLON tipo SEMICOLON varsB
Rule 5     varsI -> COMMA ID varsI
Rule 6     varsI -> empty
Rule 7     varsB -> ID varsI COLON tipo SEMICOLON varsB
Rule 8     varsB -> empty
Rule 9     tipo -> INT
Rule 10    tipo -> FLOAT
Rule 11    bloque -> LCURLY bloqueB RCURLY
Rule 12    bloqueB -> estatuto bloqueB
Rule 13    bloqueB -> empty
Rule 14    estatuto -> asignacion
Rule 15    estatuto -> condicion
Rule 16    estatuto -> escritura
Rule 17    asignacion -> ID EQUALS expresion SEMICOLON
Rule 18    escritura -> PRINT LPAREN escrituraB RPAREN SEMICOLON
Rule 19    escrituraB -> expresion escrituraC
Rule 20    escrituraB -> CTESTRING escrituraC
Rule 21    escrituraC -> COMMA escrituraB
Rule 22    escrituraC -> empty
Rule 23    expresion -> exp expresionB
Rule 24    expresionB -> GT exp
Rule 25    expresionB -> LT exp
Rule 26    expresionB -> NE exp
Rule 27    expresionB -> empty
Rule 28    condicion -> IF LPAREN expresion RPAREN bloque condicionB SEMICOLON
Rule 29    condicionB -> ELSE bloque
Rule 30    condicionB -> empty
Rule 31    exp -> termino expB
Rule 32    expB -> PLUS exp
Rule 33    expB -> MINUS exp
Rule 34    expB -> empty
Rule 35    termino -> factor terminoB
Rule 36    terminoB -> TIMES termino
Rule 37    terminoB -> DIVIDE termino
Rule 38    terminoB -> empty
Rule 39    factor -> LPAREN expresion RPAREN
Rule 40    factor -> factorB varcte
Rule 41    factorB -> PLUS
Rule 42    factorB -> MINUS
Rule 43    factorB -> empty
Rule 44    varcte -> ID
Rule 45    varcte -> CTEI
Rule 46    varcte -> CTEF
Rule 47    empty -> <empty>

Terminals, with rules where they appear

COLON                : 4 7
COMMA                : 5 21
CTEF                 : 46
CTEI                 : 45
CTESTRING            : 20
DIVIDE               : 37
ELSE                 : 29
EQUALS               : 17
FLOAT                : 10
GT                   : 24
ID                   : 1 4 5 7 17 44
IF                   : 28
INT                  : 9
LCURLY               : 11
LPAREN               : 18 28 39
LT                   : 25
MINUS                : 33 42
NE                   : 26
PLUS                 : 32 41
PRINT                : 18
PROGRAM              : 1
RCURLY               : 11
RPAREN               : 18 28 39
SEMICOLON            : 1 4 7 17 18 28
TIMES                : 36
VAR                  : 4
error                : 

Nonterminals, with rules where they appear

asignacion           : 14
bloque               : 2 3 28 29
bloqueB              : 11 12
condicion            : 15
condicionB           : 28
empty                : 6 8 13 22 27 30 34 38 43
escritura            : 16
escrituraB           : 18 21
escrituraC           : 19 20
estatuto             : 12
exp                  : 23 24 25 26 32 33
expB                 : 31
expresion            : 17 19 28 39
expresionB           : 23
factor               : 35
factorB              : 40
program              : 0
programB             : 1
termino              : 31 36 37
terminoB             : 35
tipo                 : 4 7
varcte               : 40
vars                 : 2
varsB                : 4 7
varsI                : 4 5 7

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON programB

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON programB

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON programB

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . programB
    (2) programB -> . vars bloque
    (3) programB -> . bloque
    (4) vars -> . VAR ID varsI COLON tipo SEMICOLON varsB
    (11) bloque -> . LCURLY bloqueB RCURLY

    VAR             shift and go to state 8
    LCURLY          shift and go to state 9

    programB                       shift and go to state 5
    vars                           shift and go to state 6
    bloque                         shift and go to state 7

state 5

    (1) program -> PROGRAM ID SEMICOLON programB .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON programB .)


state 6

    (2) programB -> vars . bloque
    (11) bloque -> . LCURLY bloqueB RCURLY

    LCURLY          shift and go to state 9

    bloque                         shift and go to state 10

state 7

    (3) programB -> bloque .

    $end            reduce using rule 3 (programB -> bloque .)


state 8

    (4) vars -> VAR . ID varsI COLON tipo SEMICOLON varsB

    ID              shift and go to state 11


state 9

    (11) bloque -> LCURLY . bloqueB RCURLY
    (12) bloqueB -> . estatuto bloqueB
    (13) bloqueB -> . empty
    (14) estatuto -> . asignacion
    (15) estatuto -> . condicion
    (16) estatuto -> . escritura
    (47) empty -> .
    (17) asignacion -> . ID EQUALS expresion SEMICOLON
    (28) condicion -> . IF LPAREN expresion RPAREN bloque condicionB SEMICOLON
    (18) escritura -> . PRINT LPAREN escrituraB RPAREN SEMICOLON

    RCURLY          reduce using rule 47 (empty -> .)
    ID              shift and go to state 18
    IF              shift and go to state 19
    PRINT           shift and go to state 20

    bloqueB                        shift and go to state 12
    estatuto                       shift and go to state 13
    empty                          shift and go to state 14
    asignacion                     shift and go to state 15
    condicion                      shift and go to state 16
    escritura                      shift and go to state 17

state 10

    (2) programB -> vars bloque .

    $end            reduce using rule 2 (programB -> vars bloque .)


state 11

    (4) vars -> VAR ID . varsI COLON tipo SEMICOLON varsB
    (5) varsI -> . COMMA ID varsI
    (6) varsI -> . empty
    (47) empty -> .

    COMMA           shift and go to state 22
    COLON           reduce using rule 47 (empty -> .)

    varsI                          shift and go to state 21
    empty                          shift and go to state 23

state 12

    (11) bloque -> LCURLY bloqueB . RCURLY

    RCURLY          shift and go to state 24


state 13

    (12) bloqueB -> estatuto . bloqueB
    (12) bloqueB -> . estatuto bloqueB
    (13) bloqueB -> . empty
    (14) estatuto -> . asignacion
    (15) estatuto -> . condicion
    (16) estatuto -> . escritura
    (47) empty -> .
    (17) asignacion -> . ID EQUALS expresion SEMICOLON
    (28) condicion -> . IF LPAREN expresion RPAREN bloque condicionB SEMICOLON
    (18) escritura -> . PRINT LPAREN escrituraB RPAREN SEMICOLON

    RCURLY          reduce using rule 47 (empty -> .)
    ID              shift and go to state 18
    IF              shift and go to state 19
    PRINT           shift and go to state 20

    estatuto                       shift and go to state 13
    bloqueB                        shift and go to state 25
    empty                          shift and go to state 14
    asignacion                     shift and go to state 15
    condicion                      shift and go to state 16
    escritura                      shift and go to state 17

state 14

    (13) bloqueB -> empty .

    RCURLY          reduce using rule 13 (bloqueB -> empty .)


state 15

    (14) estatuto -> asignacion .

    ID              reduce using rule 14 (estatuto -> asignacion .)
    IF              reduce using rule 14 (estatuto -> asignacion .)
    PRINT           reduce using rule 14 (estatuto -> asignacion .)
    RCURLY          reduce using rule 14 (estatuto -> asignacion .)


state 16

    (15) estatuto -> condicion .

    ID              reduce using rule 15 (estatuto -> condicion .)
    IF              reduce using rule 15 (estatuto -> condicion .)
    PRINT           reduce using rule 15 (estatuto -> condicion .)
    RCURLY          reduce using rule 15 (estatuto -> condicion .)


state 17

    (16) estatuto -> escritura .

    ID              reduce using rule 16 (estatuto -> escritura .)
    IF              reduce using rule 16 (estatuto -> escritura .)
    PRINT           reduce using rule 16 (estatuto -> escritura .)
    RCURLY          reduce using rule 16 (estatuto -> escritura .)


state 18

    (17) asignacion -> ID . EQUALS expresion SEMICOLON

    EQUALS          shift and go to state 26


state 19

    (28) condicion -> IF . LPAREN expresion RPAREN bloque condicionB SEMICOLON

    LPAREN          shift and go to state 27


state 20

    (18) escritura -> PRINT . LPAREN escrituraB RPAREN SEMICOLON

    LPAREN          shift and go to state 28


state 21

    (4) vars -> VAR ID varsI . COLON tipo SEMICOLON varsB

    COLON           shift and go to state 29


state 22

    (5) varsI -> COMMA . ID varsI

    ID              shift and go to state 30


state 23

    (6) varsI -> empty .

    COLON           reduce using rule 6 (varsI -> empty .)


state 24

    (11) bloque -> LCURLY bloqueB RCURLY .

    $end            reduce using rule 11 (bloque -> LCURLY bloqueB RCURLY .)
    ELSE            reduce using rule 11 (bloque -> LCURLY bloqueB RCURLY .)
    SEMICOLON       reduce using rule 11 (bloque -> LCURLY bloqueB RCURLY .)


state 25

    (12) bloqueB -> estatuto bloqueB .

    RCURLY          reduce using rule 12 (bloqueB -> estatuto bloqueB .)


state 26

    (17) asignacion -> ID EQUALS . expresion SEMICOLON
    (23) expresion -> . exp expresionB
    (31) exp -> . termino expB
    (35) termino -> . factor terminoB
    (39) factor -> . LPAREN expresion RPAREN
    (40) factor -> . factorB varcte
    (41) factorB -> . PLUS
    (42) factorB -> . MINUS
    (43) factorB -> . empty
    (47) empty -> .

    LPAREN          shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    CTEI            reduce using rule 47 (empty -> .)
    CTEF            reduce using rule 47 (empty -> .)

    expresion                      shift and go to state 31
    exp                            shift and go to state 32
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    factorB                        shift and go to state 36
    empty                          shift and go to state 39

state 27

    (28) condicion -> IF LPAREN . expresion RPAREN bloque condicionB SEMICOLON
    (23) expresion -> . exp expresionB
    (31) exp -> . termino expB
    (35) termino -> . factor terminoB
    (39) factor -> . LPAREN expresion RPAREN
    (40) factor -> . factorB varcte
    (41) factorB -> . PLUS
    (42) factorB -> . MINUS
    (43) factorB -> . empty
    (47) empty -> .

    LPAREN          shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    CTEI            reduce using rule 47 (empty -> .)
    CTEF            reduce using rule 47 (empty -> .)

    expresion                      shift and go to state 40
    exp                            shift and go to state 32
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    factorB                        shift and go to state 36
    empty                          shift and go to state 39

state 28

    (18) escritura -> PRINT LPAREN . escrituraB RPAREN SEMICOLON
    (19) escrituraB -> . expresion escrituraC
    (20) escrituraB -> . CTESTRING escrituraC
    (23) expresion -> . exp expresionB
    (31) exp -> . termino expB
    (35) termino -> . factor terminoB
    (39) factor -> . LPAREN expresion RPAREN
    (40) factor -> . factorB varcte
    (41) factorB -> . PLUS
    (42) factorB -> . MINUS
    (43) factorB -> . empty
    (47) empty -> .

    CTESTRING       shift and go to state 43
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    CTEI            reduce using rule 47 (empty -> .)
    CTEF            reduce using rule 47 (empty -> .)

    escrituraB                     shift and go to state 41
    expresion                      shift and go to state 42
    exp                            shift and go to state 32
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    factorB                        shift and go to state 36
    empty                          shift and go to state 39

state 29

    (4) vars -> VAR ID varsI COLON . tipo SEMICOLON varsB
    (9) tipo -> . INT
    (10) tipo -> . FLOAT

    INT             shift and go to state 45
    FLOAT           shift and go to state 46

    tipo                           shift and go to state 44

state 30

    (5) varsI -> COMMA ID . varsI
    (5) varsI -> . COMMA ID varsI
    (6) varsI -> . empty
    (47) empty -> .

    COMMA           shift and go to state 22
    COLON           reduce using rule 47 (empty -> .)

    varsI                          shift and go to state 47
    empty                          shift and go to state 23

state 31

    (17) asignacion -> ID EQUALS expresion . SEMICOLON

    SEMICOLON       shift and go to state 48


state 32

    (23) expresion -> exp . expresionB
    (24) expresionB -> . GT exp
    (25) expresionB -> . LT exp
    (26) expresionB -> . NE exp
    (27) expresionB -> . empty
    (47) empty -> .

    GT              shift and go to state 50
    LT              shift and go to state 51
    NE              shift and go to state 52
    SEMICOLON       reduce using rule 47 (empty -> .)
    RPAREN          reduce using rule 47 (empty -> .)
    COMMA           reduce using rule 47 (empty -> .)

    expresionB                     shift and go to state 49
    empty                          shift and go to state 53

state 33

    (31) exp -> termino . expB
    (32) expB -> . PLUS exp
    (33) expB -> . MINUS exp
    (34) expB -> . empty
    (47) empty -> .

    PLUS            shift and go to state 55
    MINUS           shift and go to state 56
    GT              reduce using rule 47 (empty -> .)
    LT              reduce using rule 47 (empty -> .)
    NE              reduce using rule 47 (empty -> .)
    SEMICOLON       reduce using rule 47 (empty -> .)
    RPAREN          reduce using rule 47 (empty -> .)
    COMMA           reduce using rule 47 (empty -> .)

    expB                           shift and go to state 54
    empty                          shift and go to state 57

state 34

    (35) termino -> factor . terminoB
    (36) terminoB -> . TIMES termino
    (37) terminoB -> . DIVIDE termino
    (38) terminoB -> . empty
    (47) empty -> .

    TIMES           shift and go to state 59
    DIVIDE          shift and go to state 60
    PLUS            reduce using rule 47 (empty -> .)
    MINUS           reduce using rule 47 (empty -> .)
    GT              reduce using rule 47 (empty -> .)
    LT              reduce using rule 47 (empty -> .)
    NE              reduce using rule 47 (empty -> .)
    SEMICOLON       reduce using rule 47 (empty -> .)
    RPAREN          reduce using rule 47 (empty -> .)
    COMMA           reduce using rule 47 (empty -> .)

    terminoB                       shift and go to state 58
    empty                          shift and go to state 61

state 35

    (39) factor -> LPAREN . expresion RPAREN
    (23) expresion -> . exp expresionB
    (31) exp -> . termino expB
    (35) termino -> . factor terminoB
    (39) factor -> . LPAREN expresion RPAREN
    (40) factor -> . factorB varcte
    (41) factorB -> . PLUS
    (42) factorB -> . MINUS
    (43) factorB -> . empty
    (47) empty -> .

    LPAREN          shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    CTEI            reduce using rule 47 (empty -> .)
    CTEF            reduce using rule 47 (empty -> .)

    expresion                      shift and go to state 62
    exp                            shift and go to state 32
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    factorB                        shift and go to state 36
    empty                          shift and go to state 39

state 36

    (40) factor -> factorB . varcte
    (44) varcte -> . ID
    (45) varcte -> . CTEI
    (46) varcte -> . CTEF

    ID              shift and go to state 64
    CTEI            shift and go to state 65
    CTEF            shift and go to state 66

    varcte                         shift and go to state 63

state 37

    (41) factorB -> PLUS .

    ID              reduce using rule 41 (factorB -> PLUS .)
    CTEI            reduce using rule 41 (factorB -> PLUS .)
    CTEF            reduce using rule 41 (factorB -> PLUS .)


state 38

    (42) factorB -> MINUS .

    ID              reduce using rule 42 (factorB -> MINUS .)
    CTEI            reduce using rule 42 (factorB -> MINUS .)
    CTEF            reduce using rule 42 (factorB -> MINUS .)


state 39

    (43) factorB -> empty .

    ID              reduce using rule 43 (factorB -> empty .)
    CTEI            reduce using rule 43 (factorB -> empty .)
    CTEF            reduce using rule 43 (factorB -> empty .)


state 40

    (28) condicion -> IF LPAREN expresion . RPAREN bloque condicionB SEMICOLON

    RPAREN          shift and go to state 67


state 41

    (18) escritura -> PRINT LPAREN escrituraB . RPAREN SEMICOLON

    RPAREN          shift and go to state 68


state 42

    (19) escrituraB -> expresion . escrituraC
    (21) escrituraC -> . COMMA escrituraB
    (22) escrituraC -> . empty
    (47) empty -> .

    COMMA           shift and go to state 70
    RPAREN          reduce using rule 47 (empty -> .)

    escrituraC                     shift and go to state 69
    empty                          shift and go to state 71

state 43

    (20) escrituraB -> CTESTRING . escrituraC
    (21) escrituraC -> . COMMA escrituraB
    (22) escrituraC -> . empty
    (47) empty -> .

    COMMA           shift and go to state 70
    RPAREN          reduce using rule 47 (empty -> .)

    escrituraC                     shift and go to state 72
    empty                          shift and go to state 71

state 44

    (4) vars -> VAR ID varsI COLON tipo . SEMICOLON varsB

    SEMICOLON       shift and go to state 73


state 45

    (9) tipo -> INT .

    SEMICOLON       reduce using rule 9 (tipo -> INT .)


state 46

    (10) tipo -> FLOAT .

    SEMICOLON       reduce using rule 10 (tipo -> FLOAT .)


state 47

    (5) varsI -> COMMA ID varsI .

    COLON           reduce using rule 5 (varsI -> COMMA ID varsI .)


state 48

    (17) asignacion -> ID EQUALS expresion SEMICOLON .

    ID              reduce using rule 17 (asignacion -> ID EQUALS expresion SEMICOLON .)
    IF              reduce using rule 17 (asignacion -> ID EQUALS expresion SEMICOLON .)
    PRINT           reduce using rule 17 (asignacion -> ID EQUALS expresion SEMICOLON .)
    RCURLY          reduce using rule 17 (asignacion -> ID EQUALS expresion SEMICOLON .)


state 49

    (23) expresion -> exp expresionB .

    SEMICOLON       reduce using rule 23 (expresion -> exp expresionB .)
    RPAREN          reduce using rule 23 (expresion -> exp expresionB .)
    COMMA           reduce using rule 23 (expresion -> exp expresionB .)


state 50

    (24) expresionB -> GT . exp
    (31) exp -> . termino expB
    (35) termino -> . factor terminoB
    (39) factor -> . LPAREN expresion RPAREN
    (40) factor -> . factorB varcte
    (41) factorB -> . PLUS
    (42) factorB -> . MINUS
    (43) factorB -> . empty
    (47) empty -> .

    LPAREN          shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    CTEI            reduce using rule 47 (empty -> .)
    CTEF            reduce using rule 47 (empty -> .)

    exp                            shift and go to state 74
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    factorB                        shift and go to state 36
    empty                          shift and go to state 39

state 51

    (25) expresionB -> LT . exp
    (31) exp -> . termino expB
    (35) termino -> . factor terminoB
    (39) factor -> . LPAREN expresion RPAREN
    (40) factor -> . factorB varcte
    (41) factorB -> . PLUS
    (42) factorB -> . MINUS
    (43) factorB -> . empty
    (47) empty -> .

    LPAREN          shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    CTEI            reduce using rule 47 (empty -> .)
    CTEF            reduce using rule 47 (empty -> .)

    exp                            shift and go to state 75
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    factorB                        shift and go to state 36
    empty                          shift and go to state 39

state 52

    (26) expresionB -> NE . exp
    (31) exp -> . termino expB
    (35) termino -> . factor terminoB
    (39) factor -> . LPAREN expresion RPAREN
    (40) factor -> . factorB varcte
    (41) factorB -> . PLUS
    (42) factorB -> . MINUS
    (43) factorB -> . empty
    (47) empty -> .

    LPAREN          shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    CTEI            reduce using rule 47 (empty -> .)
    CTEF            reduce using rule 47 (empty -> .)

    exp                            shift and go to state 76
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    factorB                        shift and go to state 36
    empty                          shift and go to state 39

state 53

    (27) expresionB -> empty .

    SEMICOLON       reduce using rule 27 (expresionB -> empty .)
    RPAREN          reduce using rule 27 (expresionB -> empty .)
    COMMA           reduce using rule 27 (expresionB -> empty .)


state 54

    (31) exp -> termino expB .

    GT              reduce using rule 31 (exp -> termino expB .)
    LT              reduce using rule 31 (exp -> termino expB .)
    NE              reduce using rule 31 (exp -> termino expB .)
    SEMICOLON       reduce using rule 31 (exp -> termino expB .)
    RPAREN          reduce using rule 31 (exp -> termino expB .)
    COMMA           reduce using rule 31 (exp -> termino expB .)


state 55

    (32) expB -> PLUS . exp
    (31) exp -> . termino expB
    (35) termino -> . factor terminoB
    (39) factor -> . LPAREN expresion RPAREN
    (40) factor -> . factorB varcte
    (41) factorB -> . PLUS
    (42) factorB -> . MINUS
    (43) factorB -> . empty
    (47) empty -> .

    LPAREN          shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    CTEI            reduce using rule 47 (empty -> .)
    CTEF            reduce using rule 47 (empty -> .)

    exp                            shift and go to state 77
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    factorB                        shift and go to state 36
    empty                          shift and go to state 39

state 56

    (33) expB -> MINUS . exp
    (31) exp -> . termino expB
    (35) termino -> . factor terminoB
    (39) factor -> . LPAREN expresion RPAREN
    (40) factor -> . factorB varcte
    (41) factorB -> . PLUS
    (42) factorB -> . MINUS
    (43) factorB -> . empty
    (47) empty -> .

    LPAREN          shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    CTEI            reduce using rule 47 (empty -> .)
    CTEF            reduce using rule 47 (empty -> .)

    exp                            shift and go to state 78
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    factorB                        shift and go to state 36
    empty                          shift and go to state 39

state 57

    (34) expB -> empty .

    GT              reduce using rule 34 (expB -> empty .)
    LT              reduce using rule 34 (expB -> empty .)
    NE              reduce using rule 34 (expB -> empty .)
    SEMICOLON       reduce using rule 34 (expB -> empty .)
    RPAREN          reduce using rule 34 (expB -> empty .)
    COMMA           reduce using rule 34 (expB -> empty .)


state 58

    (35) termino -> factor terminoB .

    PLUS            reduce using rule 35 (termino -> factor terminoB .)
    MINUS           reduce using rule 35 (termino -> factor terminoB .)
    GT              reduce using rule 35 (termino -> factor terminoB .)
    LT              reduce using rule 35 (termino -> factor terminoB .)
    NE              reduce using rule 35 (termino -> factor terminoB .)
    SEMICOLON       reduce using rule 35 (termino -> factor terminoB .)
    RPAREN          reduce using rule 35 (termino -> factor terminoB .)
    COMMA           reduce using rule 35 (termino -> factor terminoB .)


state 59

    (36) terminoB -> TIMES . termino
    (35) termino -> . factor terminoB
    (39) factor -> . LPAREN expresion RPAREN
    (40) factor -> . factorB varcte
    (41) factorB -> . PLUS
    (42) factorB -> . MINUS
    (43) factorB -> . empty
    (47) empty -> .

    LPAREN          shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    CTEI            reduce using rule 47 (empty -> .)
    CTEF            reduce using rule 47 (empty -> .)

    termino                        shift and go to state 79
    factor                         shift and go to state 34
    factorB                        shift and go to state 36
    empty                          shift and go to state 39

state 60

    (37) terminoB -> DIVIDE . termino
    (35) termino -> . factor terminoB
    (39) factor -> . LPAREN expresion RPAREN
    (40) factor -> . factorB varcte
    (41) factorB -> . PLUS
    (42) factorB -> . MINUS
    (43) factorB -> . empty
    (47) empty -> .

    LPAREN          shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    CTEI            reduce using rule 47 (empty -> .)
    CTEF            reduce using rule 47 (empty -> .)

    termino                        shift and go to state 80
    factor                         shift and go to state 34
    factorB                        shift and go to state 36
    empty                          shift and go to state 39

state 61

    (38) terminoB -> empty .

    PLUS            reduce using rule 38 (terminoB -> empty .)
    MINUS           reduce using rule 38 (terminoB -> empty .)
    GT              reduce using rule 38 (terminoB -> empty .)
    LT              reduce using rule 38 (terminoB -> empty .)
    NE              reduce using rule 38 (terminoB -> empty .)
    SEMICOLON       reduce using rule 38 (terminoB -> empty .)
    RPAREN          reduce using rule 38 (terminoB -> empty .)
    COMMA           reduce using rule 38 (terminoB -> empty .)


state 62

    (39) factor -> LPAREN expresion . RPAREN

    RPAREN          shift and go to state 81


state 63

    (40) factor -> factorB varcte .

    TIMES           reduce using rule 40 (factor -> factorB varcte .)
    DIVIDE          reduce using rule 40 (factor -> factorB varcte .)
    PLUS            reduce using rule 40 (factor -> factorB varcte .)
    MINUS           reduce using rule 40 (factor -> factorB varcte .)
    GT              reduce using rule 40 (factor -> factorB varcte .)
    LT              reduce using rule 40 (factor -> factorB varcte .)
    NE              reduce using rule 40 (factor -> factorB varcte .)
    SEMICOLON       reduce using rule 40 (factor -> factorB varcte .)
    RPAREN          reduce using rule 40 (factor -> factorB varcte .)
    COMMA           reduce using rule 40 (factor -> factorB varcte .)


state 64

    (44) varcte -> ID .

    TIMES           reduce using rule 44 (varcte -> ID .)
    DIVIDE          reduce using rule 44 (varcte -> ID .)
    PLUS            reduce using rule 44 (varcte -> ID .)
    MINUS           reduce using rule 44 (varcte -> ID .)
    GT              reduce using rule 44 (varcte -> ID .)
    LT              reduce using rule 44 (varcte -> ID .)
    NE              reduce using rule 44 (varcte -> ID .)
    SEMICOLON       reduce using rule 44 (varcte -> ID .)
    RPAREN          reduce using rule 44 (varcte -> ID .)
    COMMA           reduce using rule 44 (varcte -> ID .)


state 65

    (45) varcte -> CTEI .

    TIMES           reduce using rule 45 (varcte -> CTEI .)
    DIVIDE          reduce using rule 45 (varcte -> CTEI .)
    PLUS            reduce using rule 45 (varcte -> CTEI .)
    MINUS           reduce using rule 45 (varcte -> CTEI .)
    GT              reduce using rule 45 (varcte -> CTEI .)
    LT              reduce using rule 45 (varcte -> CTEI .)
    NE              reduce using rule 45 (varcte -> CTEI .)
    SEMICOLON       reduce using rule 45 (varcte -> CTEI .)
    RPAREN          reduce using rule 45 (varcte -> CTEI .)
    COMMA           reduce using rule 45 (varcte -> CTEI .)


state 66

    (46) varcte -> CTEF .

    TIMES           reduce using rule 46 (varcte -> CTEF .)
    DIVIDE          reduce using rule 46 (varcte -> CTEF .)
    PLUS            reduce using rule 46 (varcte -> CTEF .)
    MINUS           reduce using rule 46 (varcte -> CTEF .)
    GT              reduce using rule 46 (varcte -> CTEF .)
    LT              reduce using rule 46 (varcte -> CTEF .)
    NE              reduce using rule 46 (varcte -> CTEF .)
    SEMICOLON       reduce using rule 46 (varcte -> CTEF .)
    RPAREN          reduce using rule 46 (varcte -> CTEF .)
    COMMA           reduce using rule 46 (varcte -> CTEF .)


state 67

    (28) condicion -> IF LPAREN expresion RPAREN . bloque condicionB SEMICOLON
    (11) bloque -> . LCURLY bloqueB RCURLY

    LCURLY          shift and go to state 9

    bloque                         shift and go to state 82

state 68

    (18) escritura -> PRINT LPAREN escrituraB RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 83


state 69

    (19) escrituraB -> expresion escrituraC .

    RPAREN          reduce using rule 19 (escrituraB -> expresion escrituraC .)


state 70

    (21) escrituraC -> COMMA . escrituraB
    (19) escrituraB -> . expresion escrituraC
    (20) escrituraB -> . CTESTRING escrituraC
    (23) expresion -> . exp expresionB
    (31) exp -> . termino expB
    (35) termino -> . factor terminoB
    (39) factor -> . LPAREN expresion RPAREN
    (40) factor -> . factorB varcte
    (41) factorB -> . PLUS
    (42) factorB -> . MINUS
    (43) factorB -> . empty
    (47) empty -> .

    CTESTRING       shift and go to state 43
    LPAREN          shift and go to state 35
    PLUS            shift and go to state 37
    MINUS           shift and go to state 38
    ID              reduce using rule 47 (empty -> .)
    CTEI            reduce using rule 47 (empty -> .)
    CTEF            reduce using rule 47 (empty -> .)

    escrituraB                     shift and go to state 84
    expresion                      shift and go to state 42
    exp                            shift and go to state 32
    termino                        shift and go to state 33
    factor                         shift and go to state 34
    factorB                        shift and go to state 36
    empty                          shift and go to state 39

state 71

    (22) escrituraC -> empty .

    RPAREN          reduce using rule 22 (escrituraC -> empty .)


state 72

    (20) escrituraB -> CTESTRING escrituraC .

    RPAREN          reduce using rule 20 (escrituraB -> CTESTRING escrituraC .)


state 73

    (4) vars -> VAR ID varsI COLON tipo SEMICOLON . varsB
    (7) varsB -> . ID varsI COLON tipo SEMICOLON varsB
    (8) varsB -> . empty
    (47) empty -> .

    ID              shift and go to state 85
    LCURLY          reduce using rule 47 (empty -> .)

    varsB                          shift and go to state 86
    empty                          shift and go to state 87

state 74

    (24) expresionB -> GT exp .

    SEMICOLON       reduce using rule 24 (expresionB -> GT exp .)
    RPAREN          reduce using rule 24 (expresionB -> GT exp .)
    COMMA           reduce using rule 24 (expresionB -> GT exp .)


state 75

    (25) expresionB -> LT exp .

    SEMICOLON       reduce using rule 25 (expresionB -> LT exp .)
    RPAREN          reduce using rule 25 (expresionB -> LT exp .)
    COMMA           reduce using rule 25 (expresionB -> LT exp .)


state 76

    (26) expresionB -> NE exp .

    SEMICOLON       reduce using rule 26 (expresionB -> NE exp .)
    RPAREN          reduce using rule 26 (expresionB -> NE exp .)
    COMMA           reduce using rule 26 (expresionB -> NE exp .)


state 77

    (32) expB -> PLUS exp .

    GT              reduce using rule 32 (expB -> PLUS exp .)
    LT              reduce using rule 32 (expB -> PLUS exp .)
    NE              reduce using rule 32 (expB -> PLUS exp .)
    SEMICOLON       reduce using rule 32 (expB -> PLUS exp .)
    RPAREN          reduce using rule 32 (expB -> PLUS exp .)
    COMMA           reduce using rule 32 (expB -> PLUS exp .)


state 78

    (33) expB -> MINUS exp .

    GT              reduce using rule 33 (expB -> MINUS exp .)
    LT              reduce using rule 33 (expB -> MINUS exp .)
    NE              reduce using rule 33 (expB -> MINUS exp .)
    SEMICOLON       reduce using rule 33 (expB -> MINUS exp .)
    RPAREN          reduce using rule 33 (expB -> MINUS exp .)
    COMMA           reduce using rule 33 (expB -> MINUS exp .)


state 79

    (36) terminoB -> TIMES termino .

    PLUS            reduce using rule 36 (terminoB -> TIMES termino .)
    MINUS           reduce using rule 36 (terminoB -> TIMES termino .)
    GT              reduce using rule 36 (terminoB -> TIMES termino .)
    LT              reduce using rule 36 (terminoB -> TIMES termino .)
    NE              reduce using rule 36 (terminoB -> TIMES termino .)
    SEMICOLON       reduce using rule 36 (terminoB -> TIMES termino .)
    RPAREN          reduce using rule 36 (terminoB -> TIMES termino .)
    COMMA           reduce using rule 36 (terminoB -> TIMES termino .)


state 80

    (37) terminoB -> DIVIDE termino .

    PLUS            reduce using rule 37 (terminoB -> DIVIDE termino .)
    MINUS           reduce using rule 37 (terminoB -> DIVIDE termino .)
    GT              reduce using rule 37 (terminoB -> DIVIDE termino .)
    LT              reduce using rule 37 (terminoB -> DIVIDE termino .)
    NE              reduce using rule 37 (terminoB -> DIVIDE termino .)
    SEMICOLON       reduce using rule 37 (terminoB -> DIVIDE termino .)
    RPAREN          reduce using rule 37 (terminoB -> DIVIDE termino .)
    COMMA           reduce using rule 37 (terminoB -> DIVIDE termino .)


state 81

    (39) factor -> LPAREN expresion RPAREN .

    TIMES           reduce using rule 39 (factor -> LPAREN expresion RPAREN .)
    DIVIDE          reduce using rule 39 (factor -> LPAREN expresion RPAREN .)
    PLUS            reduce using rule 39 (factor -> LPAREN expresion RPAREN .)
    MINUS           reduce using rule 39 (factor -> LPAREN expresion RPAREN .)
    GT              reduce using rule 39 (factor -> LPAREN expresion RPAREN .)
    LT              reduce using rule 39 (factor -> LPAREN expresion RPAREN .)
    NE              reduce using rule 39 (factor -> LPAREN expresion RPAREN .)
    SEMICOLON       reduce using rule 39 (factor -> LPAREN expresion RPAREN .)
    RPAREN          reduce using rule 39 (factor -> LPAREN expresion RPAREN .)
    COMMA           reduce using rule 39 (factor -> LPAREN expresion RPAREN .)


state 82

    (28) condicion -> IF LPAREN expresion RPAREN bloque . condicionB SEMICOLON
    (29) condicionB -> . ELSE bloque
    (30) condicionB -> . empty
    (47) empty -> .

    ELSE            shift and go to state 89
    SEMICOLON       reduce using rule 47 (empty -> .)

    condicionB                     shift and go to state 88
    empty                          shift and go to state 90

state 83

    (18) escritura -> PRINT LPAREN escrituraB RPAREN SEMICOLON .

    ID              reduce using rule 18 (escritura -> PRINT LPAREN escrituraB RPAREN SEMICOLON .)
    IF              reduce using rule 18 (escritura -> PRINT LPAREN escrituraB RPAREN SEMICOLON .)
    PRINT           reduce using rule 18 (escritura -> PRINT LPAREN escrituraB RPAREN SEMICOLON .)
    RCURLY          reduce using rule 18 (escritura -> PRINT LPAREN escrituraB RPAREN SEMICOLON .)


state 84

    (21) escrituraC -> COMMA escrituraB .

    RPAREN          reduce using rule 21 (escrituraC -> COMMA escrituraB .)


state 85

    (7) varsB -> ID . varsI COLON tipo SEMICOLON varsB
    (5) varsI -> . COMMA ID varsI
    (6) varsI -> . empty
    (47) empty -> .

    COMMA           shift and go to state 22
    COLON           reduce using rule 47 (empty -> .)

    varsI                          shift and go to state 91
    empty                          shift and go to state 23

state 86

    (4) vars -> VAR ID varsI COLON tipo SEMICOLON varsB .

    LCURLY          reduce using rule 4 (vars -> VAR ID varsI COLON tipo SEMICOLON varsB .)


state 87

    (8) varsB -> empty .

    LCURLY          reduce using rule 8 (varsB -> empty .)


state 88

    (28) condicion -> IF LPAREN expresion RPAREN bloque condicionB . SEMICOLON

    SEMICOLON       shift and go to state 92


state 89

    (29) condicionB -> ELSE . bloque
    (11) bloque -> . LCURLY bloqueB RCURLY

    LCURLY          shift and go to state 9

    bloque                         shift and go to state 93

state 90

    (30) condicionB -> empty .

    SEMICOLON       reduce using rule 30 (condicionB -> empty .)


state 91

    (7) varsB -> ID varsI . COLON tipo SEMICOLON varsB

    COLON           shift and go to state 94


state 92

    (28) condicion -> IF LPAREN expresion RPAREN bloque condicionB SEMICOLON .

    ID              reduce using rule 28 (condicion -> IF LPAREN expresion RPAREN bloque condicionB SEMICOLON .)
    IF              reduce using rule 28 (condicion -> IF LPAREN expresion RPAREN bloque condicionB SEMICOLON .)
    PRINT           reduce using rule 28 (condicion -> IF LPAREN expresion RPAREN bloque condicionB SEMICOLON .)
    RCURLY          reduce using rule 28 (condicion -> IF LPAREN expresion RPAREN bloque condicionB SEMICOLON .)


state 93

    (29) condicionB -> ELSE bloque .

    SEMICOLON       reduce using rule 29 (condicionB -> ELSE bloque .)


state 94

    (7) varsB -> ID varsI COLON . tipo SEMICOLON varsB
    (9) tipo -> . INT
    (10) tipo -> . FLOAT

    INT             shift and go to state 45
    FLOAT           shift and go to state 46

    tipo                           shift and go to state 95

state 95

    (7) varsB -> ID varsI COLON tipo . SEMICOLON varsB

    SEMICOLON       shift and go to state 96


state 96

    (7) varsB -> ID varsI COLON tipo SEMICOLON . varsB
    (7) varsB -> . ID varsI COLON tipo SEMICOLON varsB
    (8) varsB -> . empty
    (47) empty -> .

    ID              shift and go to state 85
    LCURLY          reduce using rule 47 (empty -> .)

    varsB                          shift and go to state 97
    empty                          shift and go to state 87

state 97

    (7) varsB -> ID varsI COLON tipo SEMICOLON varsB .

    LCURLY          reduce using rule 7 (varsB -> ID varsI COLON tipo SEMICOLON varsB .)

