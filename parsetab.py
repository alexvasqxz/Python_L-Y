
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA CTEF CTEI CTESTRING DIVIDE ELSE EQUALS FLOAT GT ID IF INT LCURLY LPAREN LT MINUS NE PLUS PRINT PROGRAM RCURLY RPAREN SEMICOLON TIMES VAR\n        program : PROGRAM ID SEMICOLON programB\n        programB : vars bloque\n                 | bloque\n        \n        vars : VAR ID varsI COLON tipo SEMICOLON varsB\n        varsI : COMMA ID varsI\n              | empty\n        varsB : ID varsI COLON tipo SEMICOLON varsB\n              | empty\n        \n        tipo : INT\n             | FLOAT\n        \n        bloque : LCURLY bloqueB RCURLY\n        bloqueB : estatuto bloqueB\n                | empty\n        \n        estatuto : asignacion\n                 | condicion\n                 | escritura\n        \n        asignacion : ID EQUALS expresion SEMICOLON\n        \n        escritura : PRINT LPAREN escrituraB RPAREN SEMICOLON\n        escrituraB : expresion escrituraC\n                   | CTESTRING escrituraC\n        escrituraC : COMMA escrituraB\n                   | empty\n        \n        expresion : exp expresionB\n        expresionB : GT exp\n                   | LT exp\n                   | NE exp\n                   | empty\n        \n        condicion : IF LPAREN expresion RPAREN bloque condicionB SEMICOLON\n        condicionB : ELSE bloque\n                   | empty\n        \n        exp : termino expB\n        expB : PLUS exp\n             | MINUS exp\n             | empty\n        \n        termino : factor terminoB\n        terminoB : TIMES termino\n                 | DIVIDE termino\n                 | empty\n        \n        factor : LPAREN expresion RPAREN\n               | factorB varcte\n        factorB : PLUS\n                | MINUS\n                | empty\n        \n        varcte : ID\n               | CTEI\n               | CTEF\n        \n        empty :\n        '
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,5,7,10,24,],[0,-1,-3,-2,-11,]),'ID':([2,8,9,13,15,16,17,22,26,27,28,35,36,37,38,39,48,50,51,52,55,56,59,60,70,73,83,92,96,],[3,11,18,18,-14,-15,-16,30,-47,-47,-47,-47,64,-41,-42,-43,-17,-47,-47,-47,-47,-47,-47,-47,-47,85,-18,-28,85,]),'SEMICOLON':([3,24,31,32,33,34,44,45,46,49,53,54,57,58,61,63,64,65,66,68,74,75,76,77,78,79,80,81,82,88,90,93,95,],[4,-11,48,-47,-47,-47,73,-9,-10,-23,-27,-31,-34,-35,-38,-40,-44,-45,-46,83,-24,-25,-26,-32,-33,-36,-37,-39,-47,92,-30,-29,96,]),'VAR':([4,],[8,]),'LCURLY':([4,6,67,73,86,87,89,96,97,],[9,9,9,-47,-4,-8,9,-47,-7,]),'RCURLY':([9,12,13,14,15,16,17,25,48,83,92,],[-47,24,-47,-13,-14,-15,-16,-12,-17,-18,-28,]),'IF':([9,13,15,16,17,48,83,92,],[19,19,-14,-15,-16,-17,-18,-28,]),'PRINT':([9,13,15,16,17,48,83,92,],[20,20,-14,-15,-16,-17,-18,-28,]),'COMMA':([11,30,32,33,34,42,43,49,53,54,57,58,61,63,64,65,66,74,75,76,77,78,79,80,81,85,],[22,22,-47,-47,-47,70,70,-23,-27,-31,-34,-35,-38,-40,-44,-45,-46,-24,-25,-26,-32,-33,-36,-37,-39,22,]),'COLON':([11,21,23,30,47,85,91,],[-47,29,-6,-47,-5,-47,94,]),'EQUALS':([18,],[26,]),'LPAREN':([19,20,26,27,28,35,50,51,52,55,56,59,60,70,],[27,28,35,35,35,35,35,35,35,35,35,35,35,35,]),'ELSE':([24,82,],[-11,89,]),'PLUS':([26,27,28,33,34,35,50,51,52,55,56,58,59,60,61,63,64,65,66,70,79,80,81,],[37,37,37,55,-47,37,37,37,37,37,37,-35,37,37,-38,-40,-44,-45,-46,37,-36,-37,-39,]),'MINUS':([26,27,28,33,34,35,50,51,52,55,56,58,59,60,61,63,64,65,66,70,79,80,81,],[38,38,38,56,-47,38,38,38,38,38,38,-35,38,38,-38,-40,-44,-45,-46,38,-36,-37,-39,]),'CTEI':([26,27,28,35,36,37,38,39,50,51,52,55,56,59,60,70,],[-47,-47,-47,-47,65,-41,-42,-43,-47,-47,-47,-47,-47,-47,-47,-47,]),'CTEF':([26,27,28,35,36,37,38,39,50,51,52,55,56,59,60,70,],[-47,-47,-47,-47,66,-41,-42,-43,-47,-47,-47,-47,-47,-47,-47,-47,]),'CTESTRING':([28,70,],[43,43,]),'INT':([29,94,],[45,45,]),'FLOAT':([29,94,],[46,46,]),'GT':([32,33,34,54,57,58,61,63,64,65,66,77,78,79,80,81,],[50,-47,-47,-31,-34,-35,-38,-40,-44,-45,-46,-32,-33,-36,-37,-39,]),'LT':([32,33,34,54,57,58,61,63,64,65,66,77,78,79,80,81,],[51,-47,-47,-31,-34,-35,-38,-40,-44,-45,-46,-32,-33,-36,-37,-39,]),'NE':([32,33,34,54,57,58,61,63,64,65,66,77,78,79,80,81,],[52,-47,-47,-31,-34,-35,-38,-40,-44,-45,-46,-32,-33,-36,-37,-39,]),'RPAREN':([32,33,34,40,41,42,43,49,53,54,57,58,61,62,63,64,65,66,69,71,72,74,75,76,77,78,79,80,81,84,],[-47,-47,-47,67,68,-47,-47,-23,-27,-31,-34,-35,-38,81,-40,-44,-45,-46,-19,-22,-20,-24,-25,-26,-32,-33,-36,-37,-39,-21,]),'TIMES':([34,63,64,65,66,81,],[59,-40,-44,-45,-46,-39,]),'DIVIDE':([34,63,64,65,66,81,],[60,-40,-44,-45,-46,-39,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'programB':([4,],[5,]),'vars':([4,],[6,]),'bloque':([4,6,67,89,],[7,10,82,93,]),'bloqueB':([9,13,],[12,25,]),'estatuto':([9,13,],[13,13,]),'empty':([9,11,13,26,27,28,30,32,33,34,35,42,43,50,51,52,55,56,59,60,70,73,82,85,96,],[14,23,14,39,39,39,23,53,57,61,39,71,71,39,39,39,39,39,39,39,39,87,90,23,87,]),'asignacion':([9,13,],[15,15,]),'condicion':([9,13,],[16,16,]),'escritura':([9,13,],[17,17,]),'varsI':([11,30,85,],[21,47,91,]),'expresion':([26,27,28,35,70,],[31,40,42,62,42,]),'exp':([26,27,28,35,50,51,52,55,56,70,],[32,32,32,32,74,75,76,77,78,32,]),'termino':([26,27,28,35,50,51,52,55,56,59,60,70,],[33,33,33,33,33,33,33,33,33,79,80,33,]),'factor':([26,27,28,35,50,51,52,55,56,59,60,70,],[34,34,34,34,34,34,34,34,34,34,34,34,]),'factorB':([26,27,28,35,50,51,52,55,56,59,60,70,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'escrituraB':([28,70,],[41,84,]),'tipo':([29,94,],[44,95,]),'expresionB':([32,],[49,]),'expB':([33,],[54,]),'terminoB':([34,],[58,]),'varcte':([36,],[63,]),'escrituraC':([42,43,],[69,72,]),'varsB':([73,96,],[86,97,]),'condicionB':([82,],[88,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> PROGRAM ID SEMICOLON programB','program',4,'p_program','lex_yacc.py',120),
  ('programB -> vars bloque','programB',2,'p_program','lex_yacc.py',121),
  ('programB -> bloque','programB',1,'p_program','lex_yacc.py',122),
  ('vars -> VAR ID varsI COLON tipo SEMICOLON varsB','vars',7,'p_vars','lex_yacc.py',128),
  ('varsI -> COMMA ID varsI','varsI',3,'p_vars','lex_yacc.py',129),
  ('varsI -> empty','varsI',1,'p_vars','lex_yacc.py',130),
  ('varsB -> ID varsI COLON tipo SEMICOLON varsB','varsB',6,'p_vars','lex_yacc.py',131),
  ('varsB -> empty','varsB',1,'p_vars','lex_yacc.py',132),
  ('tipo -> INT','tipo',1,'p_tipo','lex_yacc.py',138),
  ('tipo -> FLOAT','tipo',1,'p_tipo','lex_yacc.py',139),
  ('bloque -> LCURLY bloqueB RCURLY','bloque',3,'p_bloque','lex_yacc.py',145),
  ('bloqueB -> estatuto bloqueB','bloqueB',2,'p_bloque','lex_yacc.py',146),
  ('bloqueB -> empty','bloqueB',1,'p_bloque','lex_yacc.py',147),
  ('estatuto -> asignacion','estatuto',1,'p_estatuto','lex_yacc.py',153),
  ('estatuto -> condicion','estatuto',1,'p_estatuto','lex_yacc.py',154),
  ('estatuto -> escritura','estatuto',1,'p_estatuto','lex_yacc.py',155),
  ('asignacion -> ID EQUALS expresion SEMICOLON','asignacion',4,'p_asignacion','lex_yacc.py',161),
  ('escritura -> PRINT LPAREN escrituraB RPAREN SEMICOLON','escritura',5,'p_escritura','lex_yacc.py',167),
  ('escrituraB -> expresion escrituraC','escrituraB',2,'p_escritura','lex_yacc.py',168),
  ('escrituraB -> CTESTRING escrituraC','escrituraB',2,'p_escritura','lex_yacc.py',169),
  ('escrituraC -> COMMA escrituraB','escrituraC',2,'p_escritura','lex_yacc.py',170),
  ('escrituraC -> empty','escrituraC',1,'p_escritura','lex_yacc.py',171),
  ('expresion -> exp expresionB','expresion',2,'p_expresion','lex_yacc.py',177),
  ('expresionB -> GT exp','expresionB',2,'p_expresion','lex_yacc.py',178),
  ('expresionB -> LT exp','expresionB',2,'p_expresion','lex_yacc.py',179),
  ('expresionB -> NE exp','expresionB',2,'p_expresion','lex_yacc.py',180),
  ('expresionB -> empty','expresionB',1,'p_expresion','lex_yacc.py',181),
  ('condicion -> IF LPAREN expresion RPAREN bloque condicionB SEMICOLON','condicion',7,'p_condicion','lex_yacc.py',187),
  ('condicionB -> ELSE bloque','condicionB',2,'p_condicion','lex_yacc.py',188),
  ('condicionB -> empty','condicionB',1,'p_condicion','lex_yacc.py',189),
  ('exp -> termino expB','exp',2,'p_exp','lex_yacc.py',195),
  ('expB -> PLUS exp','expB',2,'p_exp','lex_yacc.py',196),
  ('expB -> MINUS exp','expB',2,'p_exp','lex_yacc.py',197),
  ('expB -> empty','expB',1,'p_exp','lex_yacc.py',198),
  ('termino -> factor terminoB','termino',2,'p_termino','lex_yacc.py',204),
  ('terminoB -> TIMES termino','terminoB',2,'p_termino','lex_yacc.py',205),
  ('terminoB -> DIVIDE termino','terminoB',2,'p_termino','lex_yacc.py',206),
  ('terminoB -> empty','terminoB',1,'p_termino','lex_yacc.py',207),
  ('factor -> LPAREN expresion RPAREN','factor',3,'p_factor','lex_yacc.py',213),
  ('factor -> factorB varcte','factor',2,'p_factor','lex_yacc.py',214),
  ('factorB -> PLUS','factorB',1,'p_factor','lex_yacc.py',215),
  ('factorB -> MINUS','factorB',1,'p_factor','lex_yacc.py',216),
  ('factorB -> empty','factorB',1,'p_factor','lex_yacc.py',217),
  ('varcte -> ID','varcte',1,'p_varcte','lex_yacc.py',223),
  ('varcte -> CTEI','varcte',1,'p_varcte','lex_yacc.py',224),
  ('varcte -> CTEF','varcte',1,'p_varcte','lex_yacc.py',225),
  ('empty -> <empty>','empty',0,'p_empty','lex_yacc.py',231),
]
